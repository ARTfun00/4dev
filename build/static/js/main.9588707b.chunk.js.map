{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","myNews","id","author","text","bigText","Article","state","visible","handleReadMoreClck","e","preventDefault","_this","setState","_this$props$data","this","props","data","react_default","a","createElement","className","onClick","href","React","Component","News","counter","handleClickOnNewsAtAll","_this2","renderNews","length","map","item","App_Article","key","Add","name","agree","onBtnClickHandler","alert","_this3","handleChange","_e$currentTarget","currentTarget","value","Object","defineProperty","handleCheckBoxChange","checked","validate","_this3$state","trim","_this$state","type","onChange","placeholder","disabled","App","Fragment","App_Add","App_News","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9588707b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PropTypes from 'prop-types';\n//\nconst myNews = [\n  {\n    id: 1,\n    author: 'Саша Печкин',\n    text: 'В четверг, четвертого числа...',\n    bigText: 'в четыре с четвертью часа четыре чёрненьких чумазеньких чертёнка чертили чёрными чернилами чертёж.'\n  },\n  {\n    id: 2,\n    author: 'Просто Вася',\n    text: 'Считаю, что $ должен стоить 35 рублей!',\n    bigText: 'А евро 42!'\n  },\n  {\n    id: 3,\n    author: 'Max Frontend',\n    text: 'Прошло 2 года с прошлых учебников, а $ так и не стоит 35',\n    bigText: 'А евро опять выше 70.'\n  },\n  {\n    id: 4,\n    author: 'Гость',\n    text: 'Бесплатно. Без смс, про реакт, заходи - https://maxpfrontend.ru',\n    bigText: 'Еще есть группа VK, telegram и канал на youtube! Вся инфа на сайте, не реклама!'\n  }\n];\nclass Article extends React.Component {\n  state = {\n    visible: false, // определили начальное состояние\n  }\n  handleReadMoreClck = (e) => { // добавили метод\n    e.preventDefault()\n    this.setState({ visible: true })\n  }\n\n  render() {\n    const { author, text, bigText } = this.props.data;\n    const { visible } = this.state\n    return (\n      <div className=\"article\">\n        <p className=\"news__author\">{author}:</p>\n        <p className=\"news__text\">{text}</p>\n        { !visible && <a onClick={this.handleReadMoreClck} href=\"#\" className='news__readmore'>Подробнее</a> }\n        { visible && <p className='news__big-text'>{bigText}</p> }\n      </div>\n    )\n  }\n}\n\nArticle.propTypes = {\n  data: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    bigText: PropTypes.string.isRequired\n  })\n}\n\nclass News extends React.Component {\n  state = {\n    counter: 0,\n  }\n  handleClickOnNewsAtAll = () => {\n    this.setState({ counter: ++this.state.counter });\n  }\n  renderNews = () => {\n    const { data } = this.props;\n    let newsTemplate = null;\n\n    if (data.length) {\n      newsTemplate = data.map(function(item) {\n        return <Article key={item.id} data={item}/>\n      })\n    } else {\n      newsTemplate = <p>К сожалению новостей нет</p>\n    }\n    return newsTemplate\n  }\n  render() {\n    const { data } = this.props;\n    const { counter } = this.state;\n    return (\n      <div className=\"news\">\n        {this.renderNews()}\n        {data.length ? <strong onClick={this.handleClickOnNewsAtAll} className={'news__count'}>Всего новостей: {data.length}</strong> : null\n        }\n      </div>\n    );\n  }\n}\n\nNews.propTypes = {\n  data: PropTypes.array.isRequired // PropTypes (с большой буквы) = библиотека prop-types\n}\n      \nclass Add extends React.Component {\n  state = {\n    name: \"\",\n    text: \"\",\n    agree: false,\n  }\n\n  onBtnClickHandler = (e) => {\n    e.preventDefault()\n    alert(\"Name is: \" + this.state.name + \"\\nText is: \" + this.state.text)\n  }\n  handleChange = (e) => {\n    const { id, value } = e.currentTarget\n    this.setState({ [id]: e.currentTarget.value })\n  }\n  handleCheckBoxChange = (e) => {\n    this.setState({ agree: e.currentTarget.checked })\n  }\n  validate = () => {\n    const { name, text, agree } = this.state;\n    if(name.trim() && text.trim() && agree){\n      return true\n    }\n    else return false\n  }\n  \n  render() {\n    const { name, text } = this.state\n    return (\n      <form className='add'>\n        <input\n          id='name'\n          type='text'\n          onChange={this.handleChange}\n          className='add__author'\n          placeholder='Ваше имя'\n          value={name}\n        />\n        <textarea\n          id='text'\n          onChange={this.handleChange}\n          className='add__text'\n          placeholder='Текст новости'\n          value={text}\n        ></textarea>\n        <label className='add__checkrule'>\n          <input type='checkbox' onChange={this.handleCheckBoxChange} /> Я согласен с правилами\n        </label>\n        <button\n          className='add__btn'\n          onClick={this.onBtnClickHandler}\n          disabled={!this.validate()}>\n          Показать alert\n        </button>\n      </form>\n    )\n  }\n}\n\n//\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <React.Fragment>\n          <h3>Новости</h3>\n          <Add />\n          <News data={myNews}/>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}